% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tablr_create.R
\name{tab_multi}
\alias{tab_multi}
\title{Multiple crosstabs}
\usage{
tab_multi(
  data,
  dependent_var,
  explanatory_vars,
  tab_var,
  wt,
  transpose_table = FALSE,
  only_first_level = TRUE,
  not_last_level = TRUE,
  totaltab = c("table", "line", "no"),
  show_na = TRUE,
  drop_sup_na = FALSE,
  digits = 0,
  cleannames = FALSE,
  subtext,
  sort_by = "no"
)
}
\arguments{
\item{data}{A data frame.}

\item{dependent_var}{A single dependent variable, which by default is the row
variable (see \code{transpose_table}).}

\item{explanatory_vars}{A character vector of variables to be crossed with
\code{dependent_var}. They can be factor/character, but also numeric (in
which case a \code{\link[stats]{weighted.mean}} is calculated for each row).}

\item{tab_var}{A table is made for each level in \code{tab_var} :
leave empty to make a simple crosstab.}

\item{wt}{A weight variable, of class numeric. Leave empty for unweighted
results.}

\item{transpose_table}{When set to \code{TRUE}, \code{dependent_var} goes
in columns and \code{explanatory_vars} in rows.}

\item{only_first_level, not_last_level}{By default, only the first
level of each supplementary variable is printed : it works well when there
is only two levels. When \code{only_first_level} is set to \code{FALSE},
the last level of each variable is still removed, because it usually brings
no more information. To take advantage of this feature,
use \code{\link[forcats]{fct_relevel}}
to place "negative" levels (expressing the lack of something) at the end.
To print all levels, also set \code{not_last_level} to \code{FALSE}.}

\item{totaltab}{Only useful when \code{var3} is provided. \code{"table"}
means that a total table will be created. \code{"line"} means it will be
reduced to a single row. \code{"no"}  means it will be totally removed.}

\item{show_na}{Set to \code{FALSE} to exclude individuals with \code{NA} at
\code{dependent_var} or \code{tab_var}.}

\item{drop_sup_na}{Set to \code{TRUE} to remove all individuals
with \code{NA} in at least one of \code{explanatory_vars}.}

\item{digits}{The number of digits to print, as an integer.}

\item{cleannames}{Set to \code{TRUE} to clean levels names, by removing
prefix numbers like "1-", and text in parenthesis.}

\item{subtext}{A character vector to print legend rows under the
(list of) table(s) in \code{\link{tab_xl}}}

\item{sort_by}{A variable to sort rows in each table with. It must be among
\code{explanatory_vars}.}
}
\value{
When \code{var3} is empty, a single table with
class \code{\link{single_tab}}, which is a special
\code{\link[tibble]{tibble}} with adapted printing method.
When \code{var3} is provided, a list of single tables, with class
\code{\link{tab}} (a list of \code{\link[tibble]{tibble}}).
The columns are of class pct, with a names column of
class factor. You can then modify tables with any functions
with \code{\link{tab_map}}.
}
\description{
Cross one variable with many others, in colums by default,
or in rows with \code{transpose_table = TRUE}. Another variable can be used
to produce as many crosstabs as it has levels. Wrapper around \code{tabw}.
}
\examples{
tab_multi(dplyr::storms, category, explanatory_vars =  c("pressure", "wind"))

tab_multi(forcats::gss_cat, year, explanatory_vars =  c("race", "marital"),
         only_first_level = FALSE, not_last_level = FALSE)

\dontrun{
  dplyr::storms \%>\%
    tab_multi(category, c("pressure", "wind"), transpose_table = TRUE) \%>\%
    tab_xl()
}
}
